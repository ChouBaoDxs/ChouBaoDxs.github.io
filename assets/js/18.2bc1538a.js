(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{1003:function(s,n,a){"use strict";a.r(n);var e=a(12),r=Object(e.a)({},(function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("div",{staticClass:"custom-block danger"},[e("p",{staticClass:"title"}),e("p",[s._v("视频名称：Rancher2+Docker+SpringCloud+Jenkins+Redis集群+MySQL主从搭建"),e("br"),s._v("\n视频地址：https://www.bilibili.com/video/av68396271"),e("br"),s._v("\n我的评价：★★★★☆"),e("br"),s._v("\n备注：这套教程想要源码和课件，需要找up主购买(最后一讲"),e("code",[s._v("总结")]),s._v("有列淘宝店)，不能白嫖所以给四星")])]),s._v(" "),e("p",[s._v("[TOC]")]),s._v(" "),e("h2",{attrs:{id:"第一讲课程介绍及安装linux"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第一讲课程介绍及安装linux"}},[s._v("#")]),s._v(" 第一讲课程介绍及安装linux")]),s._v(" "),e("ul",[e("li",[s._v("Rancher2：全栈化容器管理平台")]),s._v(" "),e("li",[s._v("Docker：应用容器引擎")]),s._v(" "),e("li",[s._v("Jenkins：持续交付自动化构建部署服务器")]),s._v(" "),e("li",[s._v("Spring Cloud2：完整的微服务解决方案")]),s._v(" "),e("li",[s._v("Redis5：高性能Key-Value数据库")]),s._v(" "),e("li",[s._v("MySQL8：关系型数据库")])]),s._v(" "),e("p",[s._v("要用到的东西：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("Windows\nVMware\nLinux\nDocker\nRancher\n\nspring-eureka、spring-config、spring-zuul、mysql、Jeknins、Registry\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("h3",{attrs:{id:"vmware安装linux"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vmware安装linux"}},[s._v("#")]),s._v(" VMware安装Linux")]),s._v(" "),e("ol",[e("li",[s._v("下载一个centos7的iso镜像文件")]),s._v(" "),e("li",[s._v("VMware里新建一个虚拟机(2G内存30G硬盘)")]),s._v(" "),e("li",[s._v("启动后开始安装centos7，只需要设置语言和安装源，其他都默认")]),s._v(" "),e("li",[s._v("启动后发现ping不通百度，此时将/etc/sysconfig/network-scripts/ifcfg-ensXX中的ONBOOT=no改成ONBOOT=yes，然后systemctl restart network，这样就能ping通百度了")]),s._v(" "),e("li",[s._v("安装一些必要的东西：")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("yum search ifconfig\nyum install -y net-tools.x86_64\n\nyum install -y wget\nyum install -y lrzsz # 上传下载文件的东西\nyum install -y vim\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[s._v("注：这里我选择直接Vagrantfile起一个centos")]),s._v(" "),e("h2",{attrs:{id:"第二讲1-docker安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第二讲1-docker安装"}},[s._v("#")]),s._v(" 第二讲1-docker安装")]),s._v(" "),e("h3",{attrs:{id:"docker安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker安装"}},[s._v("#")]),s._v(" docker安装")]),s._v(" "),e("p",[s._v("从官网安装太慢了，这里直接从清华开源软件镜像站下载：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("cd /etc/yum.repos.d/\nsudo wget https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/centos/docker-ce.repo\n# 修改文件里的下载访问路径\nsudo vim docker-ce.repo\n:%s@https://download.docker.com/@https://mirrors.tuna.tsinghua.edu.cn/docker-ce/@\n\n# 看一下有docker-ce源了没\nyum repolist | grep docker-ce\n\n# 开始安装\nsudo yum -y install docker-ce\n\n# 让docker开机启动\nsudo systemctl enable docker\n\n# 启动docker\nsudo systemctl start docker\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])]),e("p",[s._v("由于本教程需要用到3台centos虚拟机，所以讲师这里直接将vmware虚拟机文件夹复制了两次，一共3台。我这里是直接改了一下Vagrantfile要执行的"),e("code",[s._v("provision.sh")]),s._v("，通过vagrant up创建了另外2两台虚拟机(Vagrantfile中定义private_network的ip分别为"),e("code",[s._v("192.168.0.1")]),s._v("、"),e("code",[s._v("192.168.0.2")]),s._v("、"),e("code",[s._v("192.168.0.3")]),s._v(")。")]),s._v(" "),e("p",[s._v("本机内存不够的话建议将虚拟机内存限制为1G。讲师是在vmware中直接修改，我是改的Vagrantfile")]),s._v(" "),e("h2",{attrs:{id:"第二讲2-rancher安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第二讲2-rancher安装"}},[s._v("#")]),s._v(" 第二讲2-rancher安装")]),s._v(" "),e("h3",{attrs:{id:"修改-etc-docker-daemon-json"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改-etc-docker-daemon-json"}},[s._v("#")]),s._v(" 修改/etc/docker/daemon.json")]),s._v(" "),e("p",[s._v("先修改镜像仓库的地址，让镜像下的更快")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('vim /etc/docker/daemon.json\n# 填写以下内容\n{\n  "registry-mirrors": ["http://hub-mirror.c.163.com"]\n}\n\n# 网易的和docker中国区的镜像都下载很慢，建议用阿里云的镜像加速器\nhttps://cr.console.aliyun.com/cn-hangzhou/instances/mirrors\nsudo tee /etc/docker/daemon.json <<-\'EOF\'\n{\n  "registry-mirrors": ["https://{这里是你账号专属的号码}.mirror.aliyuncs.com"]\n}\nEOF\n\n# 重启docker\nsystemctl restart docker\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br")])]),e("h3",{attrs:{id:"安装rancher"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装rancher"}},[s._v("#")]),s._v(" 安装rancher")]),s._v(" "),e("ol",[e("li",[s._v("rancher1.x和rancher2.x差别很大，我们先拉取2.x版本的")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("docker pull rancher/rancher   # rancher2.x\n# docker pull rancher/server   # rancher1.x，不用这个老版本\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("注意：只需要在一台机器上安装rancher即可，我这里选择的是192.168.0.1，另外两台当业务服务器。")]),s._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[s._v("可以随便看看这个镜像详细信息：")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("docker inspect rancher/rancher:latest\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("ol",{attrs:{start:"3"}},[e("li",[s._v("在宿主机创建两个目录用于挂载rancher镜像")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("mkdir -p /water/runfile/docker_volume/rancher_home/rancher\nmkdir -p /water/runfile/docker_volume/rancher_home/auditlog\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("ol",{attrs:{start:"4"}},[e("li",[s._v("启动rancher容器")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('docker run -d --restart=unless-stopped -p 80:80 -p 443:443 \\\n-v /water/runfile/docker_volume/rancher_home/rancher:/var/lib/rancher \\\n-v /water/runfile/docker_volume/rancher_home/auditlog:/var/lib/auditlog \\\n--name rancher -e JAVA_OPTS="-Xmx1024m" rancher/rancher\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("ol",{attrs:{start:"5"}},[e("li",[s._v("打开防火墙端口")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("firewall-cmd --zone=public --add-port=80/tcp --permanent\nfirewall-cmd --zone=public --add-port=443/tcp --permanent\nfirewall-cmd --reload\n# 我这里就是设置了一下Vagrant的端口映射，把80和443映射出来\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("ol",{attrs:{start:"6"}},[e("li",[s._v("访问https://192.168.0.1/，进行一些初始化配置")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("管理员密码直接先设置为admin\nserver url就保持默认192.168.0.1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("ol",{attrs:{start:"7"}},[e("li",[s._v("新建一个集群")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('1. 在rancher面板里点击"添加集群"\n2. 选择"自定义"集群\n3. 设置集群名称为"SpringCloud"，其他设置项均为默认，特别注意网络驱动为Canal，点击下一步\n4. 这一步是集群选项设置\n  主机选项：当rancher运行在单节点服务器上时，必须全部勾选Etcd、Control、Worker\n  然后复制生成的命令在宿主机(即192.168.0.1)执行，稍等片刻"点击完成"，\n  此时集群仍然尚未初始化完成，需要等待(可能要几十分钟，建议将虚拟机内存拉大一点，至少2G)。\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("div",{attrs:{align:"center"}},[e("img",{attrs:{width:"600",src:a(865)}})]),s._v(" "),e("ol",{attrs:{start:"8"}},[e("li",[s._v("这里讲师修改了一下三台虚拟机的主机名，以防重名导致k8s连接失败")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("vim /etc/hostname # 这种修改hostname方式是错的，后面讲师就栽了，应用服务器无法加入集群，应当用hostnamtctl set-hostname new_hostname修改\n讲师分别改成了145 146 147，我自己是centos1、centos2、centos3\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("ol",{attrs:{start:"9"}},[e("li",[s._v("讲师这里讲了一下设置虚拟机静态ip(我由于是vagrant起的，已经弄好了)，如果是vmware之类的启动的虚拟机，需要下面这样设置网卡(讲师改了3台机子)：")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("vim /etc/sysconfig/network-scripts/ifcfg-ens33\n\n# BOOTPROTO=dhcp\nBOOTPROTO=static\n\nIPADDR=192.168.232.145 # 讲师的虚拟机静态ip\nNETMASK=255.255.255.0 # 子网掩码\nGATEWAY=192.168.232.2 # 网关\n\nDNS1=8.8.8.8  # 外网DNS\nDNS2=192.168.232.2  # 内网DNS\n\n\n# 然后重启网络\nsystemctl restart network\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("ol",{attrs:{start:"10"}},[e("li",[s._v("安装时间同步插件\n参考这篇文章："),e("a",{attrs:{href:"https://blog.csdn.net/vah101/article/details/91868147",target:"_blank",rel:"noopener noreferrer"}},[s._v("rancher安装kubernetes报错[etcd] Failed to bring up Etcd Plane: [etcd] Etcd Cluster is not healthy 解决过程"),e("OutboundLink")],1),s._v("，主要原因是服务器之间时间没同步")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# 在集群上的所有服务器执行如下命令：\nyum install ntp ntpdate -y\n\n# 选择一台服务作为 ntp 时间服务器，修改/etc/ntp.conf文件\nvim /etc/ntp.conf \n  # 注释以下设置\n  #server 0.centos.pool.ntp.org iburst\n  #server 1.centos.pool.ntp.org iburst\n  #server 2.centos.pool.ntp.org iburst\n  #server 3.centos.pool.ntp.org iburst\n  # 添加一条\n  server ntp3.aliyun.com iburst\n\n  # 另外，原始文件中有一行为如下内容：\n  #restrict 192.168.1.0 mask 255.255.255.0 nomodify notrap\n  去掉#打开注释，并将其ip修改服务器所在网段，比如服务器的ip地址为192.168.210.101，则该项改为：\n  restrict 192.168.210.0 mask 255.255.255.0 nomodify notrap\n  # 这里我是设置成restrict 192.168.0.0 mask 255.255.255.0 nomodify notrap\n\n# 在集群中的其他服务器上，也要修改/etc/ntp.conf文件：\n  # 注释以下设置\n  #server 0.centos.pool.ntp.org iburst\n  #server 1.centos.pool.ntp.org iburst\n  #server 2.centos.pool.ntp.org iburst\n  #server 3.centos.pool.ntp.org iburst\n  # 添加\n  restrict 192.168.0.0 mask 255.255.255.0 nomodify notrap\n  server 192.168.0.1 iburst\n  server ntp3.aliyun.com iburst\n\n# 在集群中的所有服务器上执行如下命令：\nservice ntpd restart\nsystemctl disable chronyd.service\nchkconfig --level 345 ntpd on\n# 之后，在集群中192.168.0.1以外的服务器上执行：这样就同步了各个服务器之间的时间\nntpq -p\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br")])]),e("ol",{attrs:{start:"11"}},[e("li",[s._v("现在就是耐心等待rancher初始化集群了，讲师这里把集群删掉重新建了一次，我也删了重建一次(同时把rancher所在虚拟机内存调到了3G，rancher官方建议测试用最好4G)")]),s._v(" "),e("li",[s._v("初始化好后需要将另外两台应用服务器也加入进来")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("几个服务器之间要通讯，所以要开端口\nfirewall-cmd --zone=public --add-port=2379/tcp --permanent\nfirewall-cmd --zone=public --add-port=2380/tcp --permanent\nfirewall-cmd --zone=public --add-port=6443/tcp --permanent\nfirewall-cmd --zone=public --add-port=10250/tcp --permanent\nfirewall-cmd --reload\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[s._v("在rancher面板里选择创建的集群，点击升级：\n")]),e("div",{attrs:{align:"center"}},[e("img",{attrs:{width:"600",src:a(866)}})]),s._v('\n拉到最下面的"添加主机命令"，生成要在应用服务器上执行的命令，需要勾选Control和Worker\n'),e("div",{attrs:{align:"center"}},[e("img",{attrs:{width:"600",src:a(867)}})]),e("p"),s._v(" "),e("p",[s._v("复制命令，到两台应用服务器192.168.0.2和192.168.0.3上执行，成功的话页面上会有提示\n")]),e("div",{attrs:{align:"center"}},[e("img",{attrs:{width:"600",src:a(868)}})]),e("p"),s._v(" "),e("p",[s._v("讲师这里报错了，没有成功加入集群，原因就是之前修改hostname的方式不对。当前页面不需要点击保存，点取消返回主面板。")]),s._v(" "),e("p",[s._v("注意：我这里也遇到点问题，rancher把我三台虚拟机的ip都读成了10.0.2.15，导致节点加入失败了。解决办法就是在生成集群命令的时候指定好ip(有个"),e("code",[s._v("高级选项")]),s._v("按钮可以展开)，注意在生成新增应用服务器的时候，也分别指定一下应用服务器的ip。\n")]),e("div",{attrs:{align:"center"}},[e("img",{attrs:{width:"600",src:a(869)}})]),e("p"),s._v(" "),e("ol",{attrs:{start:"13"}},[e("li",[s._v("在rancher主机面板中给三台主机加上对应的标签便于操作和管理：")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("rancher(192.168.0.1)：iprange=170\n应用服务器1(192.168.0.2)：deploy=worker，iprange=171\n应用服务器2(192.168.0.3)：deploy=worker，iprange=172\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("最后的主机列表如下：\n")]),e("div",{attrs:{align:"center"}},[e("img",{attrs:{width:"600",src:a(870)}})]),e("p"),s._v(" "),e("p",[s._v("我的说明：总感觉那个10.0.2.15会搞出问题来...")]),s._v(" "),e("h2",{attrs:{id:"第三讲jenkins及docker镜像仓库安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第三讲jenkins及docker镜像仓库安装"}},[s._v("#")]),s._v(" 第三讲jenkins及docker镜像仓库安装")]),s._v(" "),e("h3",{attrs:{id:"通过rancher来安装jenkins"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#通过rancher来安装jenkins"}},[s._v("#")]),s._v(" 通过Rancher来安装jenkins")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("先把三台虚拟机都开起来，访问rancher面板")])]),s._v(" "),e("li",[e("p",[s._v("在rancher的部署页中可以自动帮我们下载，这里为了明确使用，使用命令行先下载好jenkins镜像：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# 在145主控机上执行\ndocker pull jenkins/jenkins:alpine\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("在宿主机(讲师的145机器)创建jenkins挂载文件夹：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("mkdir -p /water/runfile/docker_volume/jenkins_home\n# 因为jenkins user - uid 1000（容器内使用的用户可能没有宿主机上文件夹的权限），所以这里更改一下文件夹权限\nchown -R 1000:1000 /water/runfile/docker_volume/jenkins_home\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("在rancher的部署页面中做如下操作：\n进入之前创建的springcloud集群，进入default项目，点击"),e("code",[s._v("部署服务")]),s._v("：\n")]),e("div",{attrs:{align:"center"}},[e("img",{attrs:{width:"600",src:a(871)}})]),e("p"),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('1. 输入名称 jenkins\n2. 输入镜像名 jenkins/jenkins:alpine\n3. 添加端口映射 30000(主机):8080(容器) 和 30001(主机):50000(容器)\n4. 添加一个数据卷——映射主机目录，卷名jenkins-home\n    主机路径的话就是填入我们先前创建的 /water/runfile/docker_volume/jenkins_home\n    选择为现有目录并映射到容器路径/var/jenkins_home目录路径\n4.0 后面maven的配置文件\n4.1 因为要再jenkins下执行docker命令，所以继续按照映射主机目录的步骤挂载两个宿主机的路径：\n  - /var/run/docker.sock:/var/run/docker.sock\n  - /usr/bin/docker:/usr/bin/docker\n4.2 因为jenkins里要执行docker命令，所以需要将用户设置为uid为0的用户启动。\n  点击"显示高级选项"——>命令——>用户UID填写为0(即以root用户启动)\n5. 点击启动按钮\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("启动完成后，可以在界面上点击访问看看jenkins：\n")]),e("div",{attrs:{align:"center"}},[e("img",{attrs:{width:"600",src:a(872)}})]),e("p"),s._v(" "),e("p",[s._v("注意：这里我本机居然不能通过192.168.0.1:30000访问成功，本机curl命令执行情况如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('➜  Desktop curl http://192.168.0.1:30000/\ncurl: (7) Failed to connect to 192.168.0.1 port 30000: Connection refused\n➜  Desktop curl http://192.168.0.1:80/   \n<a href="https://192.168.0.1/">Found</a>.\n\n➜  Desktop ping 192.168.0.1\nPING 192.168.0.1 (192.168.0.1): 56 data bytes\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[s._v("在几个虚拟机内部curl http://192.168.0.1:30000/ 都是可以的，感觉是我哪里设置有问题，这里我暂时先用virtualbox将192.168.0.1的30000端口映射为宿主机30000端口，通过127.0.0.1:30000访问下jenkins。之后就是一系列设置jenkins的操作了（我自己很熟）。另外遇到的问题就是jenkins无法访问网络(无法ping通baidu，可以ping通192.168.0.2和3)，我直接先将jenkins服务器的网络设置为使用主机网络了。我创建的第一个管理员用户账号密码均为admin")])]),s._v(" "),e("li",[e("p",[s._v("在jenkins中安装maven及插件：")]),s._v(" "),e("ul",[e("li",[s._v("安装maven：全局工具配置——>Add Maven——>名称填为jenkins-in-maven，版本选择3.6.2，此时并不会直接安装maven，只有在实际跑job的时候自动安装")]),s._v(" "),e("li",[s._v("插件：Maven Integration")])])]),s._v(" "),e("li",[e("p",[s._v("新建一个Item——>任务名称填写为springcloud，构建一个maven项目，确定——>"),e("code",[s._v("源码管理")]),s._v("中设置Git，但是讲师用的是他自己的私有仓库+账号密码拉取代码，所以我们就懵逼了——>"),e("code",[s._v("构建触发器")]),s._v("中取消勾选Build whenever a SNAPSHOT dependency is built——>"),e("code",[s._v("Build")]),s._v("设置如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("Root POM：spring-base/spring-eureka/pom.xml\nGoals and options：clean package -Dmaven test skip=true\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v('然后点击"保存"——>立即构建，此次构建一定会失败，因为项目有很多配置文件没指定，本次构建只是为了自动下载maven。jenkins会将maven下载到：')]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("/water/runfile/docker_volume/jenkins_home/tools/hudson.tasks.Maven_MavenInstallation/jenkins-in-maven\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("我们需要修改一下maven依赖下载地址来加速下载：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("cd /water/runfile/docker_volume/jenkins_home/tools/hudson.tasks.Maven_MavenInstallation/jenkins-in-maven\nvim config/settings.cml # 新增如下配置\n  <localRepository>\n    /var/jenkins_home/tools/hudson.tasks.Maven_MavenInstallation/jenkins-in-maven/repository\n  </localRepository>\n\n  # 下面这个要加到<mirrors>标签里\n  <mirror>\n    <id>alimaven</id>\n    <name>aliyun maven</name>\n    <url>http://maven.aliyun.com/nexus/content/groups/public/</url>\n    <mirrorOf>central</mirrorOf>\n  </mirror>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("此时maven就配置完成了，可以删除之前创建的Jenkins Item了")])])]),s._v(" "),e("h3",{attrs:{id:"创建docker私有仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建docker私有仓库"}},[s._v("#")]),s._v(" 创建docker私有仓库")]),s._v(" "),e("p",[s._v("这里讲师用的是"),e("code",[s._v("docker pull registry")]),s._v("，方便快捷，企业里使用的话我本人推荐还是用harbor。")]),s._v(" "),e("h4",{attrs:{id:"配置insecure-registries"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置insecure-registries"}},[s._v("#")]),s._v(" 配置insecure-registries")]),s._v(" "),e("p",[s._v("docker1.3.x之后，registry交互默认使用的是https，我们这里搭的只是http，所以需要给192.168.0.1、192.168.0.2和192.168.0.3配置一下"),e("code",[s._v("insecure-registries")]),s._v("：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('vim /etc/docker/daemon.json\n\n{\n  "registry-mirrors": ["https://fm6qrf83.mirror.aliyuncs.com"],\n  "insecure-registries": ["192.168.0.1:5000"]\n}\n\nsystemctl restart docker\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("h4",{attrs:{id:"rancher中部署registry"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rancher中部署registry"}},[s._v("#")]),s._v(" rancher中部署registry")]),s._v(" "),e("ol",[e("li",[s._v("先在宿主机创建一个目录用于映射数据卷："),e("code",[s._v("mkdir -p /water/runfile/docker_volume/registry")])]),s._v(" "),e("li",[s._v("到rancher部署registry容器："),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("服务名：registry\n镜像名：registry:latest\n端口：5000:5000，网络模式设置为HostPort(仅Pod所在主机端口可访问)\n主机调度指定为192.168.0.1这台机器\n映射数据卷：/water/runfile/docker_volume/registry:/var/lib/registry\n高级选项：网络中设置使用主机网络(即带上--net=host参数)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])])]),s._v(" "),e("li",[s._v("启动")]),s._v(" "),e("li",[s._v("registry命令："),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('查看私有仓库所有镜像：curl -XGET http://192.168.0.1:5000/v2/_catalog # 返回{"repositories":[]}\n查看一个镜像都有什么版本：curl -XGET http://192.168.0.1:5000/v2/镜像名/tags/list\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])])])]),s._v(" "),e("h2",{attrs:{id:"第四讲eureka-config-zuul构建及部署"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第四讲eureka-config-zuul构建及部署"}},[s._v("#")]),s._v(" 第四讲eureka,config,zuul构建及部署")]),s._v(" "),e("h3",{attrs:{id:"微服务架构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#微服务架构"}},[s._v("#")]),s._v(" 微服务架构")]),s._v(" "),e("div",{attrs:{align:"center"}},[e("img",{attrs:{width:"600",src:a(873)}})]),s._v(" "),e("h4",{attrs:{id:"公用服务组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#公用服务组件"}},[s._v("#")]),s._v(" 公用服务组件")]),s._v(" "),e("ul",[e("li",[s._v("eureka：服务发现、注册")]),s._v(" "),e("li",[s._v("config：配置中心")]),s._v(" "),e("li",[s._v("zuul：网关")]),s._v(" "),e("li",[s._v("oauth：授权")]),s._v(" "),e("li",[s._v("txlcn：分布式事务")])]),s._v(" "),e("h4",{attrs:{id:"spring-eureka创建并运行"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#spring-eureka创建并运行"}},[s._v("#")]),s._v(" spring eureka创建并运行")]),s._v(" "),e("p",[s._v("这里讲师打开了他的springcloud项目，由于他的git仓库是私有的，我们拿不到项目代码，只能记录一个过程了")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('# eureka的Dockerfile\nFROM java:8\n\nRun ln -snf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && echo \'Asia/Shanghai > /etc/timezone\'\n\nADD spring spring-eureka-0.0.1-SNAPSHOT.jar app.jar\n\nEXPOSE 8000\n\nENTRYPOINT ["java", "-jar", "/app.jar"]\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[s._v("配置jenkins，根据Dockerfile创建镜像并上传到私有镜像仓库：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('新建一个jenkins任务\n项目名称：springcloud-eureka\n类型选择：构建一个maven项目\n源码管理：git，填写项目的git，构建分支就默认的*/master\nBuild配置：\n  Root POM：spring-base/spring-eureka/pom.xml\n  Goals and options：clean package -Dmaven.test.skip=true\n  高级——>Settings file：选择文件系统中的settings文件，路径如下，目的是为了持久化下载的maven依赖\n    /var/jenkins_home/tools/hudson.tasks.Maven_MavenInstallation/jenkins-in-maven/conf/settings.xml\n\nPost Steps：执行shell\n  cp {Dockerfile的绝对路径} /var/jenkins_home/workspave/springcloud-eureka/spring-base/spring-eureka/target/\n  # 接下来正常操作就是build镜像然后push(下面这三行注释)，但是讲师说这操作可以通过docker插件实现\n  # cd /var/jenkins_home/workspave/springcloud-eureka/spring-base/spring-eureka/target/\n  # docker build -t 192.168.232.145:5000/spring-eureka .\n  # docker push 192.168.232.145:5000/spring-eureka\n\njenkin安装docker插件：\n  jenkins插件管理里安装Docker插件(在"云提供商"下面)\n  装完docker插件后进入jenkins的系统设置——>新增一个云，选择Docker，进行下面的配置\n    Name：docker\n    Docker Cloud details：\n      Docker Host URI：unix://var/run/docker.sock # 点击一下"测试连接"\n    保存\n\n现在回到配置eureka的任务：\n  在Post Steps处新增一步——>Build Publish Docker Image(docker插件提供)\n    Directory forDockerfile：/var/jenkins_home/workspave/springcloud-eureka/spring-base/spring-eureka/target/\n    Cloud：选择之前配置的docker云\n    Image：192.168.232.145:5000/spring-eureka\n    勾选Push image\n    勾选Clean local images # push完后rmi掉本地的镜像\n  注：我觉得这个配置还不如在shell里写docker login/build/push/rmi清晰明了\n\n讲师进行了一下构建，镜像推送到192.168.232.145:5000之后，可以curl看一下：\ncurl -XGET http://192.168.232.145:5000/v2/_catalog\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br")])]),e("p",[s._v("在Rancher中部署一下eureka：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('springcloud项目面板里点击"部署服务"\n  名称：spring-eureka\n  Docker镜像：192.168.232.145:5000/spring-eureka\n  端口映射：8000:8000，网络模式选择HostPort(仅Pod所在主机端口可访问)\n  网络：选择使用主机网络，因为使用容器网络的话，两个eureka之间可能ping不通(当然有其他方法)，这里图方便先用主机网络\n  主机调度：为每一个Pod自动选择符合调度规则的主机，标签键填deploy，标签值填worker\n启动，这样指定标签后eureka就跑在了讲师的146和147两台应用服务器上(讲师的145是rancher所在的主控机)\n\n讲师这里还开放了一下端口：\nfirewall-cmd --zone=public --add-port=8000\nfirewall-cmd --reload\n\n去146上看一下启动的eureka容器日志：\ndocker logs -f -t --tail 200 {container_id}\n\n讲师重复了一次操作，重新打包了一份eureka镜像，部署到147上，两份eureka的配置不同，分别要连接到对方的ip(双机部署)\n\n分别访问一下看看eureka的web界面：\n192.168.232.146:8000\n192.168.232.147:8000\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br")])]),e("p",[s._v("此时eureka就部署完成了")]),s._v(" "),e("h4",{attrs:{id:"spring-config创建并运行"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#spring-config创建并运行"}},[s._v("#")]),s._v(" spring config创建并运行")]),s._v(" "),e("p",[s._v("jenkins基本配置流程和eureka完全一致，Dockerfile也只有一行不同：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("ADD spring-config-0.0.1-SNAPSHOT.jar app.jar\n# 讲师把EXPOSE 8888注释掉了，因为rancher里也可以映射端口\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("在rancher里创建config服务：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("名称：spring-config\n镜像：192.168.232.145:5000/spring-config\n端口映射：8888:8888\n主机调度：键deploy 值worker\n网络：选择主机网络\n\n开放端口：\nfirewall-cmd --zone=public --add-port=8888\nfirewall-cmd --reload\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("h4",{attrs:{id:"spring-zuul创建并运行"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#spring-zuul创建并运行"}},[s._v("#")]),s._v(" spring zuul创建并运行")]),s._v(" "),e("p",[s._v("和之前的操作完全一致：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# Dockerfile唯一的区别：\nADD spring-zuul-0.0.1-SNAPSHOT.jar app.jar\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h2",{attrs:{id:"第五讲1-redis集群及部署"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第五讲1-redis集群及部署"}},[s._v("#")]),s._v(" 第五讲1-redis集群及部署")]),s._v(" "),e("p",[s._v("本节需要将redis集群部署到两台应用服务器上。\n备注：讲师的145、146、147分别对应我自己本地的192.168.0.1，192.168.0.2，192.168.0.3")]),s._v(" "),e("ol",{attrs:{start:"0"}},[e("li",[e("p",[s._v("部署redis镜像\n在146上部署redis1，在147上部署redis2和redis3\n在145上先pull镜像，或者rancher里直接部署(会自动拉取镜像)")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("docker pull redis:5.0.5-alpine3.10\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("将镜像推送到私有仓库去供146和147直接拉取：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("docker tag redis:5.0.5-alpine3.10 192.168.232.145:5000/redis:5.0.5-alpine3.10\ndocker push 192.168.232.145:5000/redis:5.0.5-alpine3.10\ndocker rmi 192.168.232.145:5000/redis:5.0.5-alpine3.10\ndocker rmi redis:5.0.5-alpine3.10\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("redis通过RDB和AOF两种方式来进行数据持久化，需要创建一个主机目录供其使用\n注意：这里146和147不使用自己的主机目录，而是使用145上的主机目录，比如145上的")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("/data/redis/7001\n/data/redis/7002\n/data/redis/7003\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("这也方便以后对145的redis目录做主从复制，具体操作看后面2")])]),s._v(" "),e("li",[e("p",[s._v("rancher部署redis之前，先做好远程卷挂载\nCentOS7下NFS服务安装及配置：https://www.cnblogs.com/st-jun/p/7742560.html\n因为现在的目录和文件都在145上，而redis是部署到146和147，不可能手动去创建文件夹")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("1. 145上执行rpm -qa nfs-utils rpcbind来看看有没有装NFS\n2. 安装nfs-utils rpcbind：yum install -y nfs-utils # 会自动安装rpcbind\n3. 启动rpcbind服务(一定要先启动rpcbind服务再启动nfs服务)\nsystemctl stop rpcbind\nsystemctl stop nfs-utils\nsystemctl start rpcbind\nsystemctl start nfs-utils\nsystemctl enable rpcbind\nsystemctl enable nfs-utils\n4. nfs除了主程序端口2049和rpcbind的端口是111以外，还会使用一些随机端口，我们需要指定一下这些端口，不随机：\nvim /etc/sysconfig/nfs\n# 结尾追加端口配置\nMOUNTD_PORT=4001\nSTATD_PORT=4002\nLOCKD_TCPPORT=4003\nLOCKD_UDPPORT=4003\nRQUOTAD_PORT=4004\n\nvim /etc/exports # 配置要共享的文件路径\n/water/runfile/docker_volume 192.168.232.145/24(rw,sync,wdelay,hide,no_subtree_check,sec=sys,secure,root_squash,no_root_squash)\n# 这里是支持配置多个路径的，讲师就配置了这一个，省事儿\n\nrpc.nfsd 8\nrpc.mountd\n\nexportfs -r # 使配置生效\nexportfs # 看看ok了没\n  /water/runfile/docker_volume\n\t                  192.168.232.145/24  \n  # 输出上面这样的信息就表示可以通过这个ip访问目录了\n\n# 讲师这里开放了一下端口\nfirewall-cmd --zone=public --add-port=2049/udp --permanent\nfirewall-cmd --zone=public --add-port=2049/tcp --permanent\nfirewall-cmd --zone=public --add-port=111/ucp --permanent\nfirewall-cmd --zone=public --add-port=111/tcp --permanent\nfirewall-cmd --zone=public --add-port=4001/ucp --permanent\nfirewall-cmd --zone=public --add-port=4001/tcp --permanent\nfirewall-cmd --zone=public --add-port=4004/ucp --permanent\nfirewall-cmd --zone=public --add-port=4004/tcp --permanent\nfirewall-cmd --reload\n\n# 重启一下下面的东西\nsystemctl restart nfs-config\nsystemctl restart nfs-idmap\nsystemctl restart nfs-lock\nsystemctl restart nfs-server\nsystemctl enable nfs-config\nsystemctl enable nfs-idmap\nsystemctl enable nfs-lock\nsystemctl enable nfs-server\n\n# 查看端口设置是否成功\nrpcinfo -p\n\n5. 在146和147上执行：\nyum install -y nfs-utils\n\nsystemctl stop rpcbind\nsystemctl stop nfs-utils\nsystemctl start rpcbind\nsystemctl start nfs-utils\nsystemctl enable rpcbind\nsystemctl enable nfs-utils\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("配置文件还是用145上共享的目录")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("mkdir -p /water/runfile/docker_volume/redis_cluster/7001/data\nmkdir -p /water/runfile/docker_volume/redis_cluster/7002/data\nmkdir -p /water/runfile/docker_volume/redis_cluster/7003/data\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("此时我们需要搞一下redis.conf，我们上面的redis镜像是5.0.5版本，我们就去官网下载一个"),e("a",{attrs:{href:"http://download.redis.io/releases/redis-5.0.5.tar.gz",target:"_blank",rel:"noopener noreferrer"}},[s._v("5.0.5版本的redis"),e("OutboundLink")],1),s._v("，把里面的redis.conf搞出来，修改一下配置，分别放到"),e("code",[s._v("/water/runfile/docker_volume/redis_cluster/7001/redis.conf")]),s._v("、"),e("code",[s._v("../7002/redis.conf")]),s._v("、"),e("code",[s._v("../7003/redis.conf")]),s._v("，需要修改的配置项如下(如果是注释掉的就打开)：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('port 7001 # 端口，另外两个文件要改成7002、7003\ncluster-enabled yes # 启用集群模式\ncluster-config-file /data/nodes.conf\ncluster-node-timeout 5000 # 超时时间\nlogfile "/data/redis.log" # 输出日志\nappendonly yes # 持久化\ndaemonize no # 是否后台运行，这里不能改成yes，不然docker运行就关闭了\nprotected-mode no # 非保护模式\npidfile /var/run/redis.pid\n# bind 127.0.0.1 # 这一句需要注释掉，不然就没法建立集群了，这是后面的坑点\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("开始在rancher里创建redis服务")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('1. 在rancher里的springcloud项目里增加一个新的命名空间：redis-cluster\n2. 回到springcloud项目面板首页——>存储——>持久卷——>添加PV：\n    名称：nfs-rediscluster-pv\n    插件：NFS Share\n    容量随意：讲师是15GB\n    插件配置中：\n      - 路径：/water/runfile/docker_volume\n      - 服务器：192.168.232.145\n    自定义配置中：\n      访问模式只勾选"多主机读写" \n    保存\n3. 去springcloud的default的命名空间——>PVC——>添加PVC：\n    名称：nfs-rediscluster-pvc\n    命名空间：redis-cluster\n    持久卷：nfs-rediscluster-pv\n    自定义配置中：\n      访问模式只勾选"多主机读写"\n    创建\n4. 部署redis master服务(部署工作负载)\n    4.1 先给146这台主机加一个标签redis-redisM，147是redis-redisS \n    4.2 将之前准备好的3个redis.conf分别放到：\n      /water/runfile/docker_volume/redis_cluster/7001/redis.conf\n      /water/runfile/docker_volume/redis_cluster/7002/redis.conf\n      /water/runfile/docker_volume/redis_cluster/7003/redis.conf\n    4.3去springcloud的default的命名空间——>工作负载——>部署服务：\n      名称：redisClusterM\n      Docker镜像：192.168.232.145:5000/redis:5.0.5-alpine3.10\n      命名空间：redis-cluster\n      端口映射：\n        7001:7001，网络模式选择HostPort(仅Pod所在主机端口可访问)\n        17001:17001，网络模式选择HostPort(仅Pod所在主机端口可访问)\n      主机调度：\n        每个Pod自动匹配主机：必须——>添加规则——>redis = redisM\n      数据卷一：使用现有PVC\n        卷名：redisclusterm-data\n        PVC：之前创建的那个nfs-rediscluster-pvc\n        文件映射：\n          - 容器路径：/data 子路径：redis_cluster/7001/data\n          - 容器路径：/usr/local/etc/redis/redis.conf 子路径：redis_cluster/7001/redis.conf\n      数据卷二：映射主机目录  # 这个数据卷是为了挂载时区文件\n        卷名：localtime\n        主机路径：/etc/localtime\n        容器路径：/etc/localtime\n      数据卷三：映射主机目录  # 挂载一下/usr/bin\n        卷名：usr-bin\n        主机路径：/usr/bin\n        容器路径：/usr/bin\n        备注：讲师课件里说如果挂载这个不行，就执行一下find / -name docker-entrypoint.sh，找到后将其cp到/usr/local/bin/docker-entrypoint.sh，映射的时候映射/usr/local/bin/docker-entrypoint.sh:/usr/local/bin/docker-entrypoint.sh，注意这个docker-entrypoint.sh需要启动过一次镜像才会有\n        但是：讲师这里根本没有试过/usr/bin，直接弄的/usr/local/bin/docker-entrypoint.sh，我用的/usr/bin，成功了\n      \n      显示高级选项：\n        命令：\n          命令(CMD)：redis-server /usr/local/etc/redis/redis.conf # 默认情况下redis的docker是不会以配置文件启动的，需要我们指定\n        网络：使用主机网络——"是"\n      \n      启动\n\n    4.4 讲师这里开放了一下端口(146这台机子)\n    firewall-cmd --zone=public --add-port=7001/tcp --permanent\n    firewall-cmd --zone=public --add-port=17001/tcp --permanent\n    firewall-cmd --reload\n\n5. 部署redis slaves服务(部署工作负载)\n    5.1 去springcloud的default的命名空间——>工作负载，直接选择第4步创建好的redisclusterm，克隆一份，改一下下面的东西：\n      名称：redisclusters1\n      端口映射：\n        7002:7002，网络模式选择HostPort(仅Pod所在主机端口可访问)\n        17002:17002，网络模式选择HostPort(仅Pod所在主机端口可访问)\n      主机调度：\n        每个Pod自动匹配主机：必须——>添加规则——>redis = redisS # 目的是为了部署到147上\n      数据卷里的文件映射：\n        - 容器路径：/data 子路径：redis_cluster/7002/data\n        - 容器路径：/usr/local/etc/redis/redis.conf 子路径：redis_cluster/7002/redis.conf\n        注意：这里讲师直接把usr-bin那个数据卷删了，也成功启动了\n      \n      启动 \n    5.2 启动第二台slave，选择5.1创建好的redisclusters1，直接克隆一份，改一下下面的东西：\n      名称：redisclusters2\n      端口映射：\n        7003:7003，网络模式选择HostPort(仅Pod所在主机端口可访问)\n        17003:17003，网络模式选择HostPort(仅Pod所在主机端口可访问)\n      主机调度：\n        每个Pod自动匹配主机：必须——>添加规则——>redis = redisS # 目的是为了部署到147上\n      数据卷里的文件映射：\n        - 容器路径：/data 子路径：redis_cluster/7003/data\n        - 容器路径：/usr/local/etc/redis/redis.conf 子路径：redis_cluster/7003/redis.conf\n\n      启动\n    5.3 开放一下147的7002、17002、7003、17003端口\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br"),e("span",{staticClass:"line-number"},[s._v("77")]),e("br"),e("span",{staticClass:"line-number"},[s._v("78")]),e("br"),e("span",{staticClass:"line-number"},[s._v("79")]),e("br"),e("span",{staticClass:"line-number"},[s._v("80")]),e("br"),e("span",{staticClass:"line-number"},[s._v("81")]),e("br"),e("span",{staticClass:"line-number"},[s._v("82")]),e("br"),e("span",{staticClass:"line-number"},[s._v("83")]),e("br"),e("span",{staticClass:"line-number"},[s._v("84")]),e("br"),e("span",{staticClass:"line-number"},[s._v("85")]),e("br"),e("span",{staticClass:"line-number"},[s._v("86")]),e("br"),e("span",{staticClass:"line-number"},[s._v("87")]),e("br"),e("span",{staticClass:"line-number"},[s._v("88")]),e("br"),e("span",{staticClass:"line-number"},[s._v("89")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("将三个redis配置成集群")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('1. 下载redis-cli客户端镜像，在145上执行：\n    docker pull goodsmileduck/redis-cli:v5.0.3\n    docker tag goodsmileduck/redis-cli:v5.0.3 192.168.232.145:5000/goodsmileduck/redis-cli:v5.0.3\n    docker push 192.168.232.145:5000/goodsmileduck/redis-cli:v5.0.3\n    docker rmi 192.168.232.145:5000/goodsmileduck/redis-cli:v5.0.3\n    docker rmi goodsmileduck/redis-cli:v5.0.3\n2. 在rancher里部署一下redis-cli服务：\n    名称：redis-cli\n    镜像：192.168.232.145:5000/goodsmileduck/redis-cli:v5.0.3\n    命名空间：redis-cluster\n    网络：使用主机网络\n    启动\n3. 在工作面板中点击redis-cli右侧的操作按钮，展开后可以看到一个"执行命令行"，点击后会弹出一个终端对话框，可以在里面执行命令：\n    ```\n    cd bin\n    redis-cli --cluster create 192.168.232.146:7001 192.168.232.147:7002 192.168.232.147:7003 --cluster-replicas 0\n    ```\n    注：cluster-replicas参数的意思是一个主带几个从，这里传0，即三个都是主，没有从，如果要三主三从就传1\n    坑点：讲师这里忘记把redis.conf中的bind 127.0.0.1注释掉了，导致无法连接redis，三个redis配置文件都需要改一下，\n         修改完之后在rancher中重启一下三个redis(就把pod数减到0，，等pod删除完后再+1即可)，\n         重新执行一下建立集群的命令，会询问yes，直接输入yes即可\n4. 查看集群中的节点\n    redis-cli.exe -c -h 192.168.232.147 -p 7002 \n    > cluster nodes\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br")])])])]),s._v(" "),e("h2",{attrs:{id:"第五讲2-mysql单机版及mysql主从部署"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第五讲2-mysql单机版及mysql主从部署"}},[s._v("#")]),s._v(" 第五讲2-mysql单机版及mysql主从部署")]),s._v(" "),e("h3",{attrs:{id:"单机版mysql"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#单机版mysql"}},[s._v("#")]),s._v(" 单机版mysql")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("拉取MySQL镜像：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("docker pull mysql:8.0.17\ndocker tag mysql:8.0.17 192.168.232.145:5000/mysql:8.0.17\ndocker push 192.168.232.145:5000/mysql:8.0.17\ndocker rmi 192.168.232.145:5000/mysql:8.0.17\ndocker rmi mysql:8.0.17\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("创建mysql映射目录：到时候也是直接PVC直接映射")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("mkdir -p /water/runfile/docker_volume/mysql8/data\nmkdir -p /water/runfile/docker_volume/mysql8/conf\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("给146和147创建标签：")]),s._v(" "),e("ul",[e("li",[s._v("146：mysql=mysqlM")]),s._v(" "),e("li",[s._v("147：mysql=mysqlS")])])]),s._v(" "),e("li",[e("p",[s._v("在rancher里启动mysql：这里讲师没有新建命名空间，直接用的default")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("名称：mysql8\n镜像：192.168.232.145:5000/mysql:8.0.17\n命名空间：default\n端口：3306:3306 HostPort(仅Pod所在主机端口可访问)\n环境变量：MYSQL_ROOT_PASSWORD=123456\n主机调度：mysql=mysqlM\n数据卷：使用现有PVC\n  注意：讲师此时发现了default命名空间里没有PVC，\n       就去建了一个nfs-mysql-pv，除了名称以外配置和之前的\n       nfs-rediscluster-pv完全一致，然后在default里新增\n       一个名为nfs-mysql-pvc的PVC\n  卷名：mysql-data\n  PVC：nfs-mysql-pvc\n  容器路径：/var/lib/mysql\n  子路径：mysql/data\n  网络：使用主机网络\n启动\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("去146这台机器上设置mysql允许远程登录并把容器里的mysql配置文件拷贝出来：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("docker exec -it {container_id} /bin/bash\n# 设置mysql允许远程登录 \nmysql -u root -p \n# 输入之前设置的环境变量密码123456\n# 下面设置一下mysql的root用户远程登录权限\nuse mysql;\nALTER USER 'root'@'%' IDENTIFIED WITH mysql_native_password BY '123456';\nflush privileges;\n\n# 拷贝my.cnf\ncd /var/lib/mysql # 将my.cnf拷贝到这里，因为/var/lib/mysql做了数据卷映射，这样就能在宿主机上看到了\ncp /etc/mysql/my.cnf .\n\n# 此时回到宿主机145\ncd /water/runfile/docker_volume/mysql8/data # 改目录下就会有一个my.cnf\n# 讲师这里用的是xshell，所以直接用sz my.cnf下载到了文件，我们用scp命令即可\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br")])]),e("p",[s._v("接下来需要修改这个my.cnf文件：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# 新增下面几行\n[client]\ndefault-character-set=utf8mb4\n\n[mysql]\ndefault-character-set=utf8mb4\n\n# 在[mysqld]下加上下面几行\nmax_connectins=10000\ndefault-time_zone='+8:00'\ncharacter-set-client-handshake=FALSE\ncharacter-set-server=utf8mb4\ncollation-server=utf8mb4_unicode_ci\ninit_connect='SET NAMES utf8mb4 COLLATE utf8mb4_unicode_ci'\nwait_timeout=2147483\ninteractive_timeout=2147483\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br")])]),e("p",[s._v("删除之前映射出来的文件：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("rm -rf /water/runfile/docker_colume/mysql8/data/*\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("在rancher将mysql8的pod配置副本数改为0(就是停止mysql服务)，将修改好的my.cnf放到"),e("code",[s._v("/water/runfile/docker_volume/mysql8/conf/my.cnf")]),s._v("，给这个mysql服务新加一个映射：")]),s._v(" "),e("ul",[e("li",[s._v("容器路径：/etc/mysql/my.cnf")]),s._v(" "),e("li",[s._v("子路径：mysql8/conf/my.cnf")])]),s._v(" "),e("p",[s._v("保存配置后将pod数改为1，重新进容器执行一次给root用户赋予远程连接到数据库的操作。")]),s._v(" "),e("p",[s._v("然后通过navicat连接192。168.232.141 3306，创建一个lovesound数据库，运行oauth2表.sql文件")])])]),s._v(" "),e("h3",{attrs:{id:"部署主从版mysql"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#部署主从版mysql"}},[s._v("#")]),s._v(" 部署主从版mysql")]),s._v(" "),e("p",[s._v("先把单机版的停掉(即pod数减为0)")]),s._v(" "),e("ol",[e("li",[s._v("修改mysql的配置文件，在单机版配置文件的基础上增加以下属性：注意，server-id属性的值需要每个mysql不一样")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("[client]\nsocket=/var/run/mysqld/mysqld.sock\n[mysql]\nsocket=/var/run/mysqld/mysqld.sock\n\n[mysqld]\nport=3310 # 3311\nskip-host-cache\nskip-name-reslove\ngeneral_log_file=/var/lib/mysql/query.log\nshow_query_log_file=/var/lib/mysql/slow.log\nlog-error=/var/lib/mysql/error.log\nlog-bin=mysql-bin\nserver-id=10000 # 20000\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[s._v("一共搞了两份配置文件：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("port=3310 server-id=10000\nport=3311 server-id=20000\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("ol",{attrs:{start:"2"}},[e("li",[s._v("配置firewall-cmd，开放3310和3311端口")]),s._v(" "),e("li",[s._v("开始在rancher创建主从mysql")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("1. 创建mysql映射文件夹\nmkdir -p /water/runfile/docker_volume/mysql8_cluster/3310/data\nmkdir -p /water/runfile/docker_volume/mysql8_cluster/3310/conf\n\nmkdir -p /water/runfile/docker_volume/mysql8_cluster/3311/data\nmkdir -p /water/runfile/docker_volume/mysql8_cluster/3311/conf\n\n2. rancher里部署工作负载\n  名称：mysql8ClusterM\n  镜像：192.168.232.145:5000/mysql:8.0.17\n  命名空间：default\n  端口映射：\n    - 3310:3310 HostPort(仅Pod所在主机端口可访问)\n  环境变量：\n    - MYSQL_ROOT_PASSWORD 123456\n  主机调度：\n    - mysql=mysqlM\n  数据卷：使用现有PVC\n    名称：mysqlm-data\n    PVC：nfs-mysql-pvc\n    映射：\n      - 容器路径：/var/lib/mysql 子路径：mysql8_cluster/3310/data\n      - 容器路径：/etc/mysql/my.conf 子路径：mysql8_cluster/3310/conf/my.cnf\n    网络：使用主机网络\n  启动：讲师这里启动失败了，原因是他之前port没有配置到[mysqld]下\n  进入到这个容器中，开放mysql root远程登录\n\n  下面开始部署从机：\n  直接从mysql8ClusterM克隆一个：\n  名称：mysql8ClusterS\n  端口映射改为3311:3311\n  主机调度：mysql=mysqlS\n  数据卷都把3310改成3311\n  启动\n  进入到这个容器中，开放mysql root远程登录\n\n3. 开始配置mysql主从\n先连到主mysql服务器上(146)执行：\nGRANT REPLICATION SLAVE ON *.* TO 'root'@'%';\nflush privileges;\nshow master status; # 可以看到主数据库状态\n\n然后去从mysql上（147）执行:\nCHANGE MASTER TO\nMASTER_HOST='192.168.232.146',\nMASTER_PORT=3310,\nMASTER_USER='root',\nMASTER_PASSWORD='123456',\nMASTER_LOG_FILE='mysql-bin.00003',\nMASTER_LOG_POS=993;\n\n# 注意，这里的MASTER_LOG_FILE和MASTER_LOG_POS是上面show master status;命令查出来的\nstart slave;# 启动slave；\nshow slave status;\n\n想要测试效果的话，就在146(master)新建一个数据库，表，增删改查数据，观察147(slave)是否同步了操作。注意，因为147是从，在147上做的操作并不会反向同步给146master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br")])]),e("h2",{attrs:{id:"第六讲aouth授权服务-txlcn事务服务-client业务服务构建及部署"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第六讲aouth授权服务-txlcn事务服务-client业务服务构建及部署"}},[s._v("#")]),s._v(" 第六讲aouth授权服务,txlcn事务服务,client业务服务构建及部署")]),s._v(" "),e("h3",{attrs:{id:"spring-oauth创建dockerfile并运行"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#spring-oauth创建dockerfile并运行"}},[s._v("#")]),s._v(" spring oauth创建Dockerfile并运行")]),s._v(" "),e("p",[s._v("注意：spring-oauth的pom文件引用了项目中的公共代码(spring-common)，所以要优先打包spring-common")]),s._v(" "),e("ol",[e("li",[s._v("创建spring-common配置jenkins里的打包")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('从一个已经存在的任务(springcloud-eureka)创建：\n项目名：springcloud-common\nspring-base/spring-common/pom.xml\nclean package -Dmaven.test.skip=true\n注：因为这个spring-common仅仅是被其他项目依赖，自己本身并不需要运行，所以可以把post steps中的"执行shell"、"Build Publish Docker Image"全删掉\n手动触发一下构建\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("ol",{attrs:{start:"2"}},[e("li",[s._v("在jenkins里给整个项目打个包：首先要把项目根目录下的pom.xml注释掉项目里一大堆spring开头的东西，防止打包进去")])]),s._v(" "),e("div",{staticClass:"language-xml line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-xml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("\x3c!-- pom.xml --\x3e")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("\x3c!-- <module>spring-zuul</module>\n<module>spring-oauth</module>\n<module>spring-smallprogram-client</module>\n<module>spring-rbac-manage</module>\n<module>spring-order</module>\n<module>txlcn-tm</module> --\x3e")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[s._v("jenkins打包配置：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("springcloud-simple\npom.xml\nclean package -Dmaven.test.skip=true\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("ol",{attrs:{start:"2"}},[e("li",[s._v("现在开始正式搭建oauth服务：")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("名称：springcloud-oauth\n从springcloud-eureka复制一个jenkins任务：\nspring-oauth/pom.xml\n执行shell：cp /var/jenkins_home/workspace/springcloud-oauth/spring-oauth/src/main/docker/Dockerfile /var/jenkins_home/workspave/springcloud-oauth/spring-base/spring-oauth/target/\nBuild Publish Docker Image：\n  - Directory for Dockerfile：/var/jenkins_home/workspave/springcloud-oauth/spring-base/spring-oauth/target/\n  - Image：192.168.232.145:5000/spring-oauth\n# 这里讲师还修改了一下项目配置文件里的mysql redis相关配置\n\n在rancher里部署oauth服务：\nspring-oauth\n192.168.232.140:5000/spring-oauth\n8002 8002\n主机调度：deploy=worker\n网络：使用主机网络\n启动\n打开firewall端口\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])]),e("h3",{attrs:{id:"txlcn-tm事务服务创建dockerfile并运行"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#txlcn-tm事务服务创建dockerfile并运行"}},[s._v("#")]),s._v(" txlcn-tm事务服务创建Dockerfile并运行")]),s._v(" "),e("p",[s._v("在jenkins中创建zuul任务：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("名称：springcloud-txlcn-tm\ntxlcn-tm/pom.xml\nclean package -Dmaven.test.skip=true\n改一下要执行的shell以及Build Publish Docker Image配置\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[s._v("然后就是老套路，在rancher中部署一下")]),s._v(" "),e("h3",{attrs:{id:"spring-client-业务系统-创建dockerfile并运行"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#spring-client-业务系统-创建dockerfile并运行"}},[s._v("#")]),s._v(" spring client(业务系统)创建Dockerfile并运行")]),s._v(" "),e("p",[s._v("都一样，老套路，略(jenkins+rancher)")]),s._v(" "),e("h2",{attrs:{id:"结尾"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#结尾"}},[s._v("#")]),s._v(" 结尾")]),s._v(" "),e("p",[s._v("后续教程加QQ738672162，会以网盘的形式发送，或者搜索淘宝店铺a512607330，购买128RMB，含源代码+安装文档")])])}),[],!1,null,null,null);n.default=r.exports},865:function(s,n,a){s.exports=a.p+"assets/img/2-添加集群-集群选项.74d1226b.jpg"},866:function(s,n,a){s.exports=a.p+"assets/img/2-升级集群-将应用服务器添加到集群.b898b7f8.jpg"},867:function(s,n,a){s.exports=a.p+"assets/img/2-应用服务器加入集群.15f8279d.jpg"},868:function(s,n,a){s.exports=a.p+"assets/img/2-应用服务器加入集群成功提示.eb88eb75.jpg"},869:function(s,n,a){s.exports=a.p+"assets/img/2-添加主机时指定ip.ff73843b.jpg"},870:function(s,n,a){s.exports=a.p+"assets/img/2-主机列表.685694bc.jpg"},871:function(s,n,a){s.exports=a.p+"assets/img/3-部署服务.b447112e.jpg"},872:function(s,n,a){s.exports=a.p+"assets/img/3-点击访问jenkins.7b5e55eb.jpg"},873:function(s,n,a){s.exports=a.p+"assets/img/4-微服务架构.547acfbb.jpg"}}]);