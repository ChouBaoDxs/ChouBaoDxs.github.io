(window.webpackJsonp=window.webpackJsonp||[]).push([[119],{1025:function(t,s,n){"use strict";n.r(s);var a=n(12),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"title"}),n("p",[t._v("应聘岗位：运维开发工程师"),n("br"),t._v("\n渠道：拉勾招聘")])]),t._v(" "),n("p",[t._v("[TOC]")]),t._v(" "),n("h2",{attrs:{id:"一面-电话面"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一面-电话面"}},[t._v("#")]),t._v(" 一面-电话面")]),t._v(" "),n("ul",[n("li",[t._v("时间：2021-03-25 16:00")]),t._v(" "),n("li",[t._v("流程：自我介绍、问答、有什么问题")])]),t._v(" "),n("h3",{attrs:{id:"面试题回忆"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#面试题回忆"}},[t._v("#")]),t._v(" 面试题回忆")]),t._v(" "),n("p",[t._v("记得不全。。。\n"),n("strong",[t._v("Python")])]),t._v(" "),n("ol",[n("li",[t._v("python 可变不可变数据：list、dict 可变，tuple 不可变")]),t._v(" "),n("li",[t._v("python 函数传值还是传引用：dict、list 之类的可变数据传引用，不可变数据传值")]),t._v(" "),n("li",[t._v("元组能不能作为 dict 的 key：可以，dict 的 key 只有一个要求——可以 hash，不可变数据都可以")]),t._v(" "),n("li",[t._v("类方法和静态方法区别：类方法第一个参数是类本身(一般写作cls)，类和实例都能直接调用")]),t._v(" "),n("li",[t._v("django 中间件的作用：处理 request 以及 response")]),t._v(" "),n("li",[t._v("type 和 isinstance：type只接受一个参数，返回参数类型。isinstance 只能判断是否属于某个已知的类型，不能直接得到变量所属的类型。isinstance 可以判断子类实例对象是属于父类的，type 会判断子类实例和父类类型不一致")]),t._v(" "),n("li",[t._v("is 和 == ：is 判断两个对象是否为同一对象, 通过 id 来判断；== 通过魔法方法"),n("code",[t._v("__eq__()")]),t._v("来判断")]),t._v(" "),n("li",[n("code",[t._v("__new__")]),t._v(" 和 "),n("code",[t._v("__init__")]),t._v("："),n("code",[t._v("__new__")]),t._v(" 是一个类方法，返回一个类实例；"),n("code",[t._v("__init__")]),t._v("是一个实例方法，第一个入参就是"),n("code",[t._v("__new__")]),t._v("返回的类实例。（tips："),n("code",[t._v("__metaclass__")]),t._v("是创建类时起作用）")])]),t._v(" "),n("p",[n("strong",[t._v("React")])]),t._v(" "),n("ol",[n("li",[t._v("React 生命周期：mount、update、unmount，穿插 will、did")]),t._v(" "),n("li",[t._v("你最常用的生命周期函数：componentDidMount")]),t._v(" "),n("li",[t._v("componentDidMount 调用几次：1 次")]),t._v(" "),n("li",[t._v("React 数据管理用的什么：我没用 redux，用的 mobx，更好用一点")])]),t._v(" "),n("p",[n("strong",[t._v("MySQL")])]),t._v(" "),n("ol",[n("li",[t._v("说一下4种事务隔离\n"),n("ul",[n("li",[n("p",[t._v("4种事务隔离：")]),t._v(" "),n("ol",[n("li",[t._v("读未提交")]),t._v(" "),n("li",[t._v("读提交")]),t._v(" "),n("li",[t._v("可重复读（MySQl 默认）")]),t._v(" "),n("li",[t._v("串行化")])]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("隔离级别")]),t._v(" "),n("th",[t._v("脏读")]),t._v(" "),n("th",[t._v("不可重复读")]),t._v(" "),n("th",[t._v("幻读")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("读未提交")]),t._v(" "),n("td",[t._v("可能")]),t._v(" "),n("td",[t._v("可能")]),t._v(" "),n("td",[t._v("可能")])]),t._v(" "),n("tr",[n("td",[t._v("读提交")]),t._v(" "),n("td",[t._v("不可能")]),t._v(" "),n("td",[t._v("可能")]),t._v(" "),n("td",[t._v("可能")])]),t._v(" "),n("tr",[n("td",[t._v("可重复读")]),t._v(" "),n("td",[t._v("不可能")]),t._v(" "),n("td",[t._v("不可能")]),t._v(" "),n("td",[t._v("可能")])]),t._v(" "),n("tr",[n("td",[t._v("串行化")]),t._v(" "),n("td",[t._v("不可能")]),t._v(" "),n("td",[t._v("不可能")]),t._v(" "),n("td",[t._v("不可能")])])])])]),t._v(" "),n("li",[n("p",[t._v("几个概念：")]),t._v(" "),n("ol",[n("li",[t._v("脏读：当前事务修改了数据尚未提交，另一个事务已经可以读到并使用这个数据了。")]),t._v(" "),n("li",[t._v("不可重复读：不可重复读的重点是修改，同样的条件，前后两次读取到的值不一样（另外一个事务修改了数据")]),t._v(" "),n("li",[t._v("幻读：幻读的重点在于新增或者删除 (数据条数变化)，同样的条件, 第1次和第2次读出来的记录数不一样（另外一个事务新增或删除了数据")])])])])])]),t._v(" "),n("p",[n("strong",[t._v("Docker&k8s")])]),t._v(" "),n("ol",[n("li",[t._v("Docker 和 虚拟机的区别：容器与虚拟机间的最大区别在于各容器系统共享主机系统的内核。容器更轻量一点。")]),t._v(" "),n("li",[t._v("应用配置管理怎么做的：我直接用的 k8s secret，传给应用的环境变量，没用配置文件（配置文件不够灵活")])]),t._v(" "),n("p",[n("strong",[t._v("其他")])]),t._v(" "),n("ol",[n("li",[t._v("go 函数参数传递是值还是引用：传值！！！传指针*进去也是值传递，在指针上修改数据而已，例外：go 的切片是值传递")]),t._v(" "),n("li",[t._v("说一下怎么翻转二叉树：")])]),t._v(" "),n("div",{staticClass:"language-py line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-py"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 递归")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("invertTree")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n    newRoot "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" TreeNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    newRoot"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("left "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("invertTree"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("right"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    newRoot"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("right "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("invertTree"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("left"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" newRoot\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 迭代")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("invertTree")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n    nodeList "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" nodeList"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        node "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nodeList"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pop"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            nodeList"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("left"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            nodeList"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("right"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("left"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("right "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("right"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("left\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" root\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br")])]),n("ol",{attrs:{start:"3"}},[n("li",[t._v("虚拟内存是什么，作用是什么：在物理内存不足时，在硬盘上虚拟出一块空间来作为内存使用，提高系统的整体性能。")])]),t._v(" "),n("p",[n("strong",[t._v("反问面试官")]),t._v("\n你们招人进去主要是做什么：目前内部的发布系统已经非常完善，想要重新探索一套以标准应用为中心的 PaaS 系统，丢掉历史包袱，抽象掉底层的一些东西。")])])}),[],!1,null,null,null);s.default=e.exports}}]);