(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{738:function(a,t,e){a.exports=e.p+"assets/img/3-主从复制解决方案.6334e1e4.jpg"},739:function(a,t,e){a.exports=e.p+"assets/img/3-MMM、MHA高可用解决方案.95ebe344.jpg"},740:function(a,t,e){a.exports=e.p+"assets/img/3-Hearbeat、SAN高可用解决方案.674cf4d7.jpg"},741:function(a,t,e){a.exports=e.p+"assets/img/3-Heartbeat、DRBD高可用解决方案.11f2598c.jpg"},742:function(a,t,e){a.exports=e.p+"assets/img/4-MySQL经典应用架构.6c90b8b5.jpg"},988:function(a,t,e){"use strict";e.r(t);var r=e(12),_=Object(r.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"title"}),r("p",[a._v("课程名称：aliyun-MySQL企业常见架构与调优经验分享"),r("br"),a._v("\n课程地址：https://edu.aliyun.com/course/48/lesson/list"),r("br"),a._v("\n我的评价：★★★☆☆"),r("br"),a._v("\n备注：本课程不是阿里云官方的课程，是一个叫"),r("code",[a._v("爱维教育")]),a._v("的机构的公开课。")])]),a._v(" "),r("p",[a._v("[TOC]")]),a._v(" "),r("h2",{attrs:{id:"课时1-选择-percona-server、mariadb-还是mysql23-00"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#课时1-选择-percona-server、mariadb-还是mysql23-00"}},[a._v("#")]),a._v(" 课时1：选择 Percona Server、MariaDB 还是MYSQL23:00")]),a._v(" "),r("h3",{attrs:{id:"_1-mysql-三种存储引擎"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-mysql-三种存储引擎"}},[a._v("#")]),a._v(" 1.MySQL 三种存储引擎")]),a._v(" "),r("p",[a._v("  MySQL提供了两种存储引擎：MyISAM 和 InnoDB。从 MySQL5.5 开始，默认存储引擎从 MyISAM 变为 InnoDB，最大的区别是 MyISAM 不支持事务。")]),a._v(" "),r("p",[a._v("  XtraDB 是 InnoDB 存储引擎的增强版本，被设计用来更好的使用更新计算机硬件系统的性能，同时还包含有一些在高性能环境下的新特性。")]),a._v(" "),r("h3",{attrs:{id:"_2-percona-server-分支"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-percona-server-分支"}},[a._v("#")]),a._v(" 2.Percona Server 分支")]),a._v(" "),r("p",[a._v("  Percona Server 由领先的 MySQL 咨询公司 Percona 发布。\n  Percona Server 是一款独立的数据库产品，与 MySQL 完全兼容，可以在不更改代码的情况下将存储引擎缓存 XtraDB。是最接近官方 MySQL Enterprise 发行版的版本。\n  Percona提供了高性能XtraDB引擎，还提供PXC高可用解决方案，并且附带了percona-toolkit等DBA管理工具箱。")]),a._v(" "),r("h3",{attrs:{id:"_3-mariadb"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-mariadb"}},[a._v("#")]),a._v(" 3.MariaDB")]),a._v(" "),r("p",[a._v("  MariaDB 由 MySQL 的创始人开发，MariaDB 的目的是完全兼容MySQL，包括 API 和命令行，使之能轻松成为 MySQL 的代替品。\n  MariaDB 提供了 MySQL 提供的标准存储引擎，即 MyISAM 和 InnoDB，10.0.9版起使用XtraDB（代号为 Aria）来代替 MySQL 的 InnoDB。")]),a._v(" "),r("h3",{attrs:{id:"_4-如何选择"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-如何选择"}},[a._v("#")]),a._v(" 4.如何选择")]),a._v(" "),r("p",[a._v("综合多年使用经验和性能对比，首选Percona分支，其次是MariaDB，如果不想冒任何一点风险，就选择MySQL官方版本。")]),a._v(" "),r("p",[a._v("我的备注：如果要搭建PXC集群，只能选Percona。")]),a._v(" "),r("h2",{attrs:{id:"课时2-常用-mysql-调优策略实战讲解36-45"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#课时2-常用-mysql-调优策略实战讲解36-45"}},[a._v("#")]),a._v(" 课时2：常用 MYSQL 调优策略实战讲解36:45")]),a._v(" "),r("h3",{attrs:{id:"_1-硬件层相关优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-硬件层相关优化"}},[a._v("#")]),a._v(" 1.硬件层相关优化")]),a._v(" "),r("p",[a._v("修改服务器BIOS设置：")]),a._v(" "),r("ul",[r("li",[a._v("选择 Performance Per Watt Optimized（DAPC）模式，发挥CPU最大性能（就是费电）")]),a._v(" "),r("li",[a._v("Memory Frequency（内存频率）选择 Maximum Performance（最佳性能，也费点电）")]),a._v(" "),r("li",[a._v("内存设置菜单中，启用 Node Interleaving，避免 NUMA 问题")])]),a._v(" "),r("h3",{attrs:{id:"_2-磁盘i-o相关"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-磁盘i-o相关"}},[a._v("#")]),a._v(" 2.磁盘I/O相关")]),a._v(" "),r("ul",[r("li",[a._v("使用 SSD 硬盘")]),a._v(" "),r("li",[a._v("如果是磁盘阵列存储，建议阵列卡同时配备 CACHE 及 BBU 模块，可明显提升 IOPS。")]),a._v(" "),r("li",[a._v("raid 级别尽量选择 raid10，而不是 raid5")])]),a._v(" "),r("h3",{attrs:{id:"_3-文件系统层优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-文件系统层优化"}},[a._v("#")]),a._v(" 3.文件系统层优化")]),a._v(" "),r("ul",[r("li",[a._v("使用 deadline/noop 这两种 i/o 调度器，千万别用 cfq")]),a._v(" "),r("li",[a._v("使用 xfs 文件系统，千万别用 ext3，ext4 勉强可用，但业务量很大的话，则一定要用 xfs")]),a._v(" "),r("li",[a._v("文件系统mount参数中增加：noatime，nodiratime，nobarrier 几个选项（nobarrier 是 xfs 文件系统特有的）")])]),a._v(" "),r("h3",{attrs:{id:"_4-内核参数优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-内核参数优化"}},[a._v("#")]),a._v(" 4.内核参数优化")]),a._v(" "),r("ul",[r("li",[a._v("修改 vm.swappiness 参数，降低 swap 使用率。RHLE7/centos7 以上则慎重设置为0，可能发生 OOM")]),a._v(" "),r("li",[a._v("调整 vm.dirty_background_ratio、vm.dirty_ratio 内核参数，以确保能持续将脏数据刷新到磁盘，避免瞬间 I/O 写，产生等待")]),a._v(" "),r("li",[a._v("调整 net.ipv4.tcp_tw_recycle、net.ipv4.tcp_tw_reuse 都设置为1，减少 TIME_WAIT，提高 TCP 率")])]),a._v(" "),r("h3",{attrs:{id:"_5-mysql-参数优化建议"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-mysql-参数优化建议"}},[a._v("#")]),a._v(" 5.MySQL 参数优化建议")]),a._v(" "),r("ul",[r("li",[a._v("建议设置 default-storage-engine=InnoDB，强烈建议不要再使用 MyISAM 引擎")]),a._v(" "),r("li",[a._v("调整 innodb_buffer_pool_size 的大小。如果是单实例且绝大多数是 InnoDB 引擎表的话，可考虑设置为物理内存的 50%~70% 左右。")]),a._v(" "),r("li",[a._v("设置 innodb_file_per_table = 1，使用独立表空间")]),a._v(" "),r("li",[a._v("调整 innodb_data_file_path = ibdata1:1G:autoextend，不要用默认的 10M，在高并发场景下，性能会有很大提升")]),a._v(" "),r("li",[a._v("设置 innodb_log_file = 256M，设置innodb_log_files_in_group=2，基本可以满足大多数应用场景")]),a._v(" "),r("li",[a._v("调整 max_connection（最大连接数）、max_connection_error（最大错误数）设置，根据业务量大小进行设置")]),a._v(" "),r("li",[a._v("另外，open_files_limit、innodb_open_files、table_open_cache、table_definition_cache 可以设置大约为 max_connection 的 10 倍左右大小")]),a._v(" "),r("li",[a._v("key_buffer_size建议调小，32M 左右即可，另外建议关闭 query cache")]),a._v(" "),r("li",[a._v("mp_table_size 和 max_heap_table_size 设置不要过大，另外 sort_buffer_size、join_buffer_size、read_buffer_size、read_rnd_buffer_size 等设置也不要过大")])]),a._v(" "),r("h2",{attrs:{id:"课时3-mysql-常见应用架构经验分享34-03"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#课时3-mysql-常见应用架构经验分享34-03"}},[a._v("#")]),a._v(" 课时3：MYSQL 常见应用架构经验分享34:03")]),a._v(" "),r("h3",{attrs:{id:"_1-主从复制解决方案"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-主从复制解决方案"}},[a._v("#")]),a._v(" 1.主从复制解决方案")]),a._v(" "),r("p",[a._v("  这是 MySQL 自身提供的一种高可用解决方案，数据同步方法采用的是 MySQL replication 技术。MySQL replication 就是从服务器到主服务器拉取二进制日志文件（即binlog），然后再将日志文件解析成相应的 SQL 在从服务器上重新执行一遍主服务器的操作，通过这种方式保证数据的一致性。\n  为了达到更高的可用性，在实际的应用环境中，一般都是采用 MySQL replication 技术配合高可用集群软件 keepalived 来实现failover，这种方式可以实现 95.000% 的 SLA。\n")]),r("div",{attrs:{align:"center"}},[r("img",{attrs:{width:"400",src:e(738)}})]),r("p"),a._v(" "),r("h3",{attrs:{id:"_2-mmm-mha-高可用解决方案"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-mmm-mha-高可用解决方案"}},[a._v("#")]),a._v(" 2.MMM/MHA 高可用解决方案")]),a._v(" "),r("p",[a._v("  MMM 提供了 MySQL 主主复制配置的监控、故障转移和管理的一套可伸缩的脚本套件。在 MMM 高可用方案中，典型的应用是双主多从架构，通过 MySQL replication技术可以实现两个服务器互为主从，且在任何时候只有一个节点可以被写入，避免了多点写入的数据冲突。\n同时，当可写的主节点故障时，MMM 套件可以立刻监控到，然后将服务自动切换到另一个主节点，继续提供服务，从而实现 MySQL 的高可用。\n")]),r("div",{attrs:{align:"center"}},[r("img",{attrs:{width:"400",src:e(739)}})]),r("p"),a._v(" "),r("h3",{attrs:{id:"_3-hearbeat-san-高可用解决方案"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-hearbeat-san-高可用解决方案"}},[a._v("#")]),a._v(" 3.Hearbeat/SAN 高可用解决方案")]),a._v(" "),r("p",[a._v("  在这个方案中，处理failover的方式是高可用集群软件 Hearbeat，它监控和管理各个节点间连接的网络，并监控集群服务，当节点出现故障或者服务不可用时，自动在其他节点启动集群服务。在数据共享方面，通过 SAN（Storage Area Network）存储来共享数据，这种方案可用实现 99.990% 的 SLA。\n")]),r("div",{attrs:{align:"center"}},[r("img",{attrs:{width:"400",src:e(740)}})]),r("p"),a._v(" "),r("h3",{attrs:{id:"_4-heartbeat-drbd-高可用解决方案"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-heartbeat-drbd-高可用解决方案"}},[a._v("#")]),a._v(" 4.Heartbeat/DRBD 高可用解决方案")]),a._v(" "),r("p",[a._v("  此方案处理 failover 的方式上依旧采用 Heartbeat，不同的是，在数据共享方面，采用了基于块级别的数据同步软件 DRBD 来实现。\n  DRBD 是一个用软件实现的、无共享的、服务器之间镜像块设备内容的存储复制解决方案。和 SAN 网络不同，它并不共享存储，而是通过服务器之间的网络复制数据。\n")]),r("div",{attrs:{align:"center"}},[r("img",{attrs:{width:"400",src:e(741)}})]),r("p"),a._v(" "),r("p",[a._v("提问：为什么不使用集群文件系统来作为MySQL存储？\n答：集群文件系统最大的问题就是 IO 太慢了，数据库本身对 IO 有非常高的要求。")]),a._v(" "),r("h2",{attrs:{id:"课时4-mysql主从复制经典应用架构10-26"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#课时4-mysql主从复制经典应用架构10-26"}},[a._v("#")]),a._v(" 课时4：MYSQL主从复制经典应用架构10:26")]),a._v(" "),r("div",{attrs:{align:"center"}},[r("img",{attrs:{width:"400",src:e(742)}})]),a._v(" "),r("blockquote",[r("p",[a._v("其中：Dbm157 是 mysql 主，dbm158是 mysql 主的备机，dbs159/160/161 是 mysql 从。MySQL 写操作一般采用基于 heartbeat + DRBD + MySQL 搭建高可用集群方案。通过 heartbeat 实现对 mysql主进行状态监测，而 DRBD 实现 dbm157 数据同步到 dbm158。")])]),a._v(" "),r("h2",{attrs:{id:"课时5-mysql主从复制架构与调优27-22"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#课时5-mysql主从复制架构与调优27-22"}},[a._v("#")]),a._v(" 课时5：MYSQL主从复制架构与调优27:22")]),a._v(" "),r("p",[a._v("这节课基本就是在介绍他们的培训课程，可以直接忽略。")])])}),[],!1,null,null,null);t.default=_.exports}}]);